[
// POST /login  (pls SSL when real users)
{
	"user_name": "",
	"user_password": ""
}
// response: (auth token in jwt)
,{"user_id":"...", "manager_business_ids":["...", "..."]}
// Possible Status Codes:  (for internal error, above of 500 will also be interpreted as it)
,{
	"SUCCESS": 200,
	"INVALID_CREDENTIALS": 401,
	"INTERNAL_ERROR": 500,
	"BAD_REQUEST": 400
}

// POST /register
,{
	"user_name": "",
	"user_password": ""
}
// response: (auth token in jwt)
,{"user_id":"...", "manager_business_ids":["...", "..."]}
// Possible Status Codes:  (for internal error, above of 500 will also be interpreted as it)
,{
	"SUCCESS": 200,
	"INVALID_CREDENTIALS": 401,
	"INTERNAL_ERROR": 500,
	"BAD_REQUEST": 400
}

// GET /businesses/{business_id}/products
// header TOKEN JWT, unpacked is {"user_id":"...", "manager_business_ids":["...", "..."]}
// response  (the product_idX are basically the actual ids of the products)
,{
	"catalog": {
	"product_id1": {"image_url":"(opt)", "product_title":"", "product_description":"", "product_price":""},
	"product_id2": {"image_url":"(opt)", "product_title":"", "product_description":"", "product_price":""},
	"product_id3": {"image_url":"(opt)", "product_title":"", "product_description":"", "product_price":""},
	"product_id4": {"image_url":"(opt)", "product_title":"", "product_description":"", "product_price":""}
	}
}
// Possible Status Codes:  (for internal error, above of 500 will also be interpreted as it)
,{
	"SUCCESS": 200,
	"INTERNAL_ERROR": 500
}

// POST /businesses/{business_id}/products
// header TOKEN JWT, unpacked is {"user_id":"...", "manager_business_ids":["...", "..."]}
//payload
,{
	"image_url":"(opt)",
	"product_title":"",
	"product_description":"(opt)",
	"product_price":""
}
// response (same as GET /businesses/{business_id}/products but updated)
// Possible Status Codes:  (for internal error, above of 500 will also be interpreted as it)
,{
	"SUCCESS": 200,
	"INTERNAL_ERROR": 500
}

// PUT /businesses/{business_id}/products/{product_id}
// header TOKEN JWT, unpacked is {"user_id":"...", "manager_business_ids":["...", "..."]}
//payload
,{
	"image_url":"(opt)",
	"product_title":"(opt)",
	"product_description":"(opt)",
	"product_price":"(opt)"
}
// response (same as GET /businesses/{business_id}/products but updated)
// Possible Status Codes:  (for internal error, above of 500 will also be interpreted as it)
,{
	"SUCCESS": 200,
	"INTERNAL_ERROR": 500
}


// GET /businesses/{business_id}/catalogs
// header TOKEN JWT, unpacked is {"user_id":"...", "manager_business_ids":["...", "..."]}
//query params: "monday_date" (assumes this date as monday and sends available products for the week)
// reponse:
,{
	"Mon": [{"product_id":"...", "product_scarcity": 5 /* or 1 or null*/}, {"product_id":"...", "product_scarcity": 5 /* or 1 or null*/}],
	"Tue": [{"product_id":"...", "product_scarcity": 5 /* or 1 or null*/}, {"product_id":"...", "product_scarcity": 5 /* or 1 or null*/}],
	"Wed": [{"product_id":"...", "product_scarcity": 5 /* or 1 or null*/}, {"product_id":"...", "product_scarcity": 5 /* or 1 or null*/}],
	"Thu": [{"product_id":"...", "product_scarcity": 5 /* or 1 or null*/}, {"product_id":"...", "product_scarcity": 5 /* or 1 or null*/}],
	"Fri": [{"product_id":"...", "product_scarcity": 5 /* or 1 or null*/}, {"product_id":"...", "product_scarcity": 5 /* or 1 or null*/}],
	"Sat": [{"product_id":"...", "product_scarcity": 5 /* or 1 or null*/}, {"product_id":"...", "product_scarcity": 5 /* or 1 or null*/}],
	"Sun": [{"product_id":"...", "product_scarcity": 5 /* or 1 or null*/}, {"product_id":"...", "product_scarcity": 5 /* or 1 or null*/}]
}
// Possible Status Codes:  (for internal error, above of 500 will also be interpreted as it)
,{
	"SUCCESS": 200,
	"INTERNAL_ERROR": 500
}


// POST /businesses/{business_id}/catalogs
// header TOKEN JWT, unpacked is {"user_id":"...", "manager_business_ids":["...", "..."]}
// payload
,{
	"catalog_date": "...",
	"catalog_products": ["product_id", "product_id", "product_id", "..."]
}
// Possible Status Codes:  (for internal error, above of 500 will also be interpreted as it)
,{
	"SUCCESS": 200,
	"INTERNAL_ERROR": 500
}

// PUT /businesses/{business_id}/catalogs
// header TOKEN JWT, unpacked is {"user_id":"...", "manager_business_ids":["...", "..."]}
// payload
,{
	"catalog_date": "...",
	"product_id": "...",
	"product_quantity": "..."
}
// logic: if product id exists in catalog updates quantity, else does nothing
// Possible Status Codes:  (for internal error, above of 500 will also be interpreted as it)
,{
	"SUCCESS": 200,
	"INTERNAL_ERROR": 500
}


// GET /businesses/{business_id}/orders
// header TOKEN JWT, unpacked is {"user_id":"...", "manager_business_ids":["...", "..."]}
//query params: monday_date
//IDEALLY WEBSOCKET FOR REAL TIME REFRESHING!!!)
//IF TOKEN IS ADMIN FOR THAT BUSINESS, THEN ALL ORDERS, ELSE ONLY USER'S ORDERS
// reponse:
,{
	"orders": [
		{
			"order_id": "",
			"user_name": "",
			"order_date": "",
			"order_data": [{"product_id":"...", "product_quantity":"..."}, {"product_id":"...", "product_quantity":"..."}],
			"order_state": "waiting_validation" // or "waiting_delivery" or "delivered"
		},
		{
			"order_id": "",
			"user_name": "",
			"order_date": "",
			"order_data": [{"product_id":"...", "product_quantity":"..."}, {"product_id":"...", "product_quantity":"..."}],
			"order_state": "waiting_validation"// or "waiting_delivery" or "delivered"
		}
	]
}
// Possible Status Codes:  (for internal error, above of 500 will also be interpreted as it)
,{
	"SUCCESS": 200,
	"INTERNAL_ERROR": 500
}

<<<<<<< HEAD
// POST /businesses/{business_id}/orders
// header TOKEN JWT, unpacked is {"user_id":"...", "manager_business_ids":["...", "..."]}
// payload
,{
	"user_id": "", 
	"order_date": "",
	"order_data" : [
		{"product_id":"...", "product_quantity":"..."},
		{"product_id":"...", "product_quantity":"..."},
		{"product_id":"...", "product_quantity":"..."}
	]
}
// response
,{ "200": "Order submitted successfully" }
,{ "400": "Error submitting order" }
// Possible Status Codes:  (for internal error, above of 500 will also be interpreted as it)
,{
	"SUCCESS": 200,
	"INTERNAL_ERROR": 500,
	"BAD_REQUEST": 400
}

// PUT /businesses/{business_id}/orders/{order_id}
// header TOKEN JWT, unpacked is {"user_id":"...", "manager_business_ids":["...", "..."]}
// payload
,{
	"order_state": "waiting_delivery" // or "delivered"
}
// response
,{ "200": "Order submitted successfully" }
,{ "400": "Error submitting order" }
// Possible Status Codes:  (for internal error, above of 500 will also be interpreted as it)
,{
	"SUCCESS": 200,
	"INTERNAL_ERROR": 500,
	"BAD_REQUEST": 400
}


// /notification_for_new_orders
=======
// notification_for_new_orders
// WEBSOCKET/business/{business_id}/notifications_for_new_orders
>>>>>>> refs/remotes/origin/notification_for_new_orders
// header TOKEN JWT, unpacked is {"user_id":"...", "manager_business_ids":["...", "..."]}
// description: Establish a Websocket connection to receive real-time notifications for new orders.
// payload: None (It doens't need to, serves notifications as they occur)
// example message received from websocket:
,{
	"order_date": "",
	"order_data": [{"product_id":"...", "quantity":"..."}],
	"user_name": "",
	"order_state": "waiting_validation" // or "waiting_delivery" or "delivered"
}
// Possible Status Codes: (sent as WebSocket messages when an error occurs)
,{
	"SUCCESS": 200,
	"INTERNAL_ERROR": 500,
	"BAD_REQUEST": 400
}
]