[
// POST /login  (pls SSL when real users)
{
	"user_name": "",
	"user_password": ""
}
// response: (auth token in jwt)
,{"user_id":"...", "user_type":"..."}

// POST /register
,{
	"user_name": "",
	"user_password": ""
}
// response: (auth token in jwt)
,{"user_id":"...", "manager_business_ids":["...", "..."]}


// POST /businesses/{business_id}/orders
// header TOKEN
// payload
,{
	"user_id": "", 
	"order_date": "",
  	"order_data" : [
		{"product_id":"...", "product_quantity":"..."},
		{"product_id":"...", "product_quantity":"..."},
		{"product_id":"...", "product_quantity":"..."}
	]
}
// response
,{ "200": "Order submitted successfully" }
,{ "400": "Error submitting order" }

// GET /businesses/{business_id}/products
// response
,{
  "catalog": [
	{"product_id":"", "image_url":"(opt)", "product_title":"", "product_description":"", "product_price":"", "product_scarcity": 5 /* or 1 or null*/},
	{"product_id":"", "image_url":"(opt)", "product_title":"", "product_description":"", "product_price":"", "product_quantity": 5 /* or 1 or null*/},
	{"product_id":"", "image_url":"(opt)", "product_title":"", "product_description":"", "product_price":"", "product_quantity": 5 /* or 1 or null*/},
	{"product_id":"", "image_url":"(opt)", "product_title":"", "product_description":"", "product_price":"", "product_quantity": 5 /* or 1 or null*/}
  ]
}

// POST /businesses/{business_id}/products
//payload
,{
	"image_url":"(opt)",
	"product_title":"",
	"product_description":"(opt)",
	"product_price":""
}
// response (same as GET /businesses/{business_id}/products but updated)

// PUT /businesses/{business_id}/products/{product_id}
//payload
,{
	"image_url":"(opt)",
	"product_title":"(opt)",
	"product_description":"(opt)",
	"product_price":"(opt)"
}
// response (same as GET /businesses/{business_id}/products but updated)



// GET /businesses/{business_id}/catalogs
//query params: "monday_date" (assumes this date as monday and sends available products for the week)
// reponse:
,{
  "monday": ["product_id", "product_id", "product_id", "..."],
  "tuesday": ["product_id", "product_id", "product_id", "..."],
  "wednesday": ["product_id", "product_id", "product_id", "..."],
  "thursday": ["product_id", "product_id", "product_id", "..."],
  "friday": ["product_id", "product_id", "product_id", "..."],
  "saturday": ["product_id", "product_id", "product_id", "..."],
  "sunday": ["product_id", "product_id", "product_id", "..."]
}

// POST /businesses/{business_id}/catalogs
// payload
,{
	"catalog_date": "...",
	"catalog_products": ["product_id", "product_id", "product_id", "..."]
}

// GET /businesses/{business_id}/orders
//query params: monday_date
//IDEALLY WEBSOCKET FOR REAL TIME REFRESHING!!!)
//IF TOKEN IS ADMIN FOR THAT BUSINESS, THEN ALL ORDERS, ELSE ONLY USER'S ORDERS
// reponse:
,{
  	"orders": [
		{
			"order_id": "",
			"user_name": "",
			"order_date": "",
			"order_data": [{"product_id":"...", "quantity":"..."}],
			"order_state": "waiting_validation" // or "waiting_delivery" or "delivered"
		},
		{
			"order_id": "",
			"user_name": "",
			"order_date": "",
			"order_data": [{"product_id":"...", "quantity":"..."}],
			"order_state": "waiting_validation"// or "waiting_delivery" or "delivered"
		}
	]
}

// /notification_for_new_orders
//websocket
// ???

]